# Boolean Search using GroupDocs.Search
##  Introduction 

GroupDocs.Search API provides the ability for you to embed strong and reliable index-based search feature into your application.
GroupDocs.Search enables the following search types for your application:
* **simple search** - returns the exact match of a search term,
* **fuzzy search** - returns the exact match of a search term and the search results containing the words similar to the search term. The level of fuzziness is configurable,
* **regular expression search**
* **boolean search** - users can apply logical operators AND, OR, NOT or the combination thereof to combine search terms and get the finer search results,
* **wildcard search**

With GroupDocs.Search API you can implement search for many document types, including text files, Word, PDF, Excel, Visio, Web files, Email message files, image/video metadata.


##  Supported File Formats

GroupDocs.Search API boolean search options supports the following file formats:

For the list of supported character sets see [Supported Character Types](/https://docs.groupdocs.com/search/net/character-types/).


## Supported Boolean Search Operators

GroupDocs.Search API boolean search function supports the following operators:
* AND - this operator is used to search for documents containing both search terms joined by this operator. If at least one search terms is absent, the document is not returned in the search results.
>Example: "US Open AND winner" will return only the documents contaning both terms.
* OR - this operator is used to search for documents containing at least one search term or both search terms joined by this operator. If at least one search terms is found, the document is returned in the search results.
>Example: "US Open OR Wimbledon" will return  the documents contaning at least terms.
* NOT - this operator is used to exclude the search term from the search results. Can be combined with AND and OR operators.


>Boolean search operators are always in upper case.

You can combine operators using parentheses. 
>Example: "(US Open AND winner) OR (Wimbledon AND winner)" will return the documents containing either the combination of "US Open" and "winner" or the combination of "Wimbledon" and "winner" or all four terms. 

## Use Cases
### Boolean Search Using OR Operator

To start search, you need to do the following:
1. create an index folder (for example, `c:\MyIndex\`)
2. create the new index
3. add the documents to index (for example, from `c:\MyDocuments\`)
4. search using text query:  `"Australia OR New Zealand"`

```csharp
string indexFolder = @"c:\MyIndex\";
string documentsFolder = @"c:\MyDocuments\";
 
// Creating an index in the specified folder
Index index = new Index(indexFolder);
 
// Indexing documents from the specified folder
index.Add(documentsFolder);
 
// Search with text query
SearchResult result1 = index.Search("US Open OR Wimbledon");
 
// Search with object query
SearchQuery wordQuery1 = SearchQuery.CreateWordQuery("Einstein");
SearchQuery wordQuery2 = SearchQuery.CreateWordQuery("relativity");
SearchQuery orQuery = SearchQuery.CreateOrQuery(wordQuery1, wordQuery2);
SearchResult result2 = index.Search(orQuery);
```

### Boolean Search Using AND Operator

```csharp
string indexFolder = @"c:\MyIndex\";
string documentsFolder = @"c:\MyDocuments\";
 
// Creating an index in the specified folder
Index index = new Index(indexFolder);
 
// Indexing documents from the specified folder
index.Add(documentsFolder);
 
// Search with text query
SearchResult result1 = index.Search("theory AND relativity");
 
// Search with object query
SearchQuery wordQuery1 = SearchQuery.CreateWordQuery("theory");
SearchQuery wordQuery2 = SearchQuery.CreateWordQuery("relativity");
SearchQuery andQuery = SearchQuery.CreateAndQuery(wordQuery1, wordQuery2);
SearchResult result2 = index.Search(andQuery);
```

### Complex Boolean Search

```csharp
string indexFolder = @"c:\MyIndex\";
string documentsFolder = @"c:\MyDocuments\";
 
// Creating an index in the specified folder
Index index = new Index(indexFolder);
 
// Indexing documents from the specified folder
index.Add(documentsFolder);
 
// Search with text query
SearchResult result1 = index.Search("(theory AND relativity) AND NOT (Einstein OR Albert)");
 
// Search with object query
SearchQuery theoryWordQuery = SearchQuery.CreateWordQuery("theory");
SearchQuery relativityWordQuery = SearchQuery.CreateWordQuery("relativity");
SearchQuery andQuery = SearchQuery.CreateAndQuery(theoryWordQuery, relativityWordQuery);
 
SearchQuery einsteinWordQuery = SearchQuery.CreateWordQuery("Einstein");
SearchQuery albertWordQuery = SearchQuery.CreateWordQuery("Albert");
SearchQuery orQuery = SearchQuery.CreateOrQuery(einsteinWordQuery, albertWordQuery);
SearchQuery notQuery = SearchQuery.CreateNotQuery(orQuery);
 
SearchQuery rootQuery = SearchQuery.CreateAndQuery(andQuery, notQuery);
SearchResult result2 = index.Search(rootQuery);
```
